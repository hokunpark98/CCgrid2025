apiVersion: networking.istio.io/v1alpha3
kind: EnvoyFilter
metadata:
  name: {component}-filter
  namespace: {namespace}
spec:
  workloadSelector:
    labels:
      app: {component}
  configPatches:
  - applyTo: HTTP_FILTER
    match:
      context: SIDECAR_OUTBOUND  # 필터를 적용할 컨텍스트 지정
      listener:
        filterChain:
          filter:
            name: envoy.filters.network.http_connection_manager
    patch:
      operation: INSERT_BEFORE
      value:
        name: envoy.filters.http.lua
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.filters.http.lua.v3.Lua
          inline_code: |
            -- 전역 변수를 사용해 파드 IP를 계속 확인하지 않도록 변수 선언
            local source = nil


            -- 변경해야 하는 곳 - 실제 트래픽을 설정된 비율만큼 할당하는 부분 
            local function traffic_allocation()
              
            end


            -- 고정 부분
            function envoy_on_request(request_handle)
              -- 첫 요청에만 파드 IP가져와서 불필요한 반복 없앰
              if not source then
                local handle = io.popen("hostname -i")
                source = handle:read("*a"):match("^%s*(.-)%s*$")
                handle:close()
              end

              local destination = request_handle:headers():get(":authority")
              request_handle:logWarn("Source: " .. (source or "nil") .. ", Destination: " .. (destination or "nil"))

              -- 실제 목적지를 결정하는 함수 호출
              destination_ip = traffic_allocation(destination_ip)
              request_handle:logWarn("Source: " .. (source or "nil") .. ", Seleted Destination: " .. (destination or "nil"))

              -- 결정된 목적지로 header 업데이트하여 pathThrough 방식으로 DNS거치지 않고 바로 되게 됨.
              request_handle:headers():replace(":authority", destination)
            end
